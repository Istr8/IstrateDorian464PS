# -*- coding: utf-8 -*-
"""Laborator3

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16w2nYjmYb7j_W9WIGIM42DX5vVlJiout
"""

import numpy as np
import matplotlib.pyplot as plt

"""Exercitiul 1"""

N = 8
omega = np.exp(-2j * np.pi / N)
F_8 = np.zeros((N, N), dtype=complex)
for i in range(N):
    for j in range(N):
        F_8[i, j] = omega ** (i * j)

F_8 /= np.sqrt(N)

# Desenarea matricei Fourier pe subplot-uri separate
fig, axs = plt.subplots(2, 1, figsize=(8, 6))

# Subplot pentru partea reală
axs[0].imshow(np.real(F_8), cmap='gray')
axs[0].set_title('Partea reala a matricei Fourier')

# Subplot pentru partea imaginară
axs[1].imshow(np.imag(F_8), cmap='gray')
axs[1].set_title('Partea imaginara a matricei Fourier')

plt.show()

# Verificați dacă matricea este unitară
F_8_conj_trans = np.conjugate(np.transpose(F_8))
F_8_mult = np.dot(F_8, F_8_conj_trans)
e_unitar = np.allclose(F_8_mult, np.eye(N))

if e_unitar:
    print("Matricea este unitara.")
else:
    print("Matricea nu este unitara.")

"""Exercitiul 2"""

